{"version":3,"file":"language-review.js","sourceRoot":"","sources":["language-review.ts"],"names":["Controller","Controller.constructor","Controller.provideLinter","Controller.activate","Controller.readyToActivate","Controller.deactivate","Controller.togglePreview","Controller.toggleOutline","Controller.toggleSyntaxList"],"mappings":"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,CAACA,CAACA,QAAQA,KAAKA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;gBAC1BA,MAAMA,CAACA;YACXA,CAACA;YACDA,IAAIA,IAAIA,GAAGA,MAAMA,CAACA,IAAIA,CAACA;YACvBA,EAAEA,CAACA,CAACA,IAAIA,KAAKA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA;gBACzBA,MAAMA,CAACA,IAAIA,6BAAiBA,CAACA,EAAEA,QAAQA,EAAEA,QAAQA,CAACA,SAASA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA;YACtEA,CAACA;YAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,IAAIA,KAAKA,CAACA,CAACA,cAAcA,CAACA,CAACA,CAACA;gBACnCA,MAAMA,CAACA,IAAIA,iCAAoBA,CAACA,EAAEA,QAAQA,EAAEA,QAAQA,CAACA,SAASA,CAACA,CAACA,CAACA,EAAEA,CAACA,CAACA;YACzEA,CAACA;QACLA,CAACA,CAACA,CAACA;IACPA,CAACA;IAEDJ,+BAAUA,GAAVA;IACAK,CAACA;IAEDL,kCAAaA,GAAbA;QACIM,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,SAASA,CAACA,mBAAmBA,EAAEA,CAACA;QAClDA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACVA,MAAMA,CAACA;QACXA,CAACA;QAEDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,yBAAyBA,CAACA,KAAKA,MAAMA,CAACA,UAAUA,EAAEA,CAACA,SAASA,CAACA,CAACA,CAACA;YAC/EA,MAAMA,CAACA;QACXA,CAACA;QAEDA,IAAIA,GAAGA,GAAMA,CAACA,CAACA,QAAQA,UAAKA,CAACA,CAACA,WAAWA,SAAIA,MAAMA,CAACA,EAAIA,CAACA;QAEzDA,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,SAASA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;QAEjDA,EAAEA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACdA,WAAWA,CAACA,WAAWA,CAACA,WAAWA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACrDA,MAAMA,CAACA;QACXA,CAACA;QAEDA,IAAIA,kBAAkBA,GAAGA,IAAIA,CAACA,SAASA,CAACA,aAAaA,EAAEA,CAACA;QAExDA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,GAAGA,EAAEA;YACrBA,KAAKA,EAAEA,OAAOA;YACdA,cAAcA,EAAEA,IAAIA;SACvBA,CAACA,CAACA,IAAIA,CAACA,UAAAA,IAAIA;YACRA,EAAEA,CAACA,CAACA,IAAIA,YAAYA,6BAAiBA,CAACA,CAACA,CAACA;gBAChBA,IAAKA,CAACA,YAAYA,EAAEA,CAACA;gBACzCA,kBAAkBA,CAACA,QAAQA,EAAEA,CAACA;YAClCA,CAACA;QACLA,CAACA,CAACA,CAACA;IACPA,CAACA;IAEDN,kCAAaA,GAAbA;QACIO,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACpBA,IAAIA,CAACA,WAAWA,GAAGA,IAAIA,6BAAiBA,EAAEA,CAACA;QAC/CA,CAACA;QACDA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,EAAEA,CAACA;IAC9BA,CAACA;IAEDP,qCAAgBA,GAAhBA;QACIQ,IAAIA,MAAMA,GAAGA,IAAIA,CAACA,SAASA,CAACA,mBAAmBA,EAAEA,CAACA;QAClDA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACVA,MAAMA,CAACA;QACXA,CAACA;QAEDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,yBAAyBA,CAACA,KAAKA,MAAMA,CAACA,UAAUA,EAAEA,CAACA,SAASA,CAACA,CAACA,CAACA;YAC/EA,MAAMA,CAACA;QACXA,CAACA;QAEDA,IAAIA,GAAGA,GAAMA,CAACA,CAACA,QAAQA,UAAKA,CAACA,CAACA,cAAcA,SAAIA,MAAMA,CAACA,EAAIA,CAACA;QAE5DA,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,SAASA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;QAEjDA,EAAEA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACdA,WAAWA,CAACA,WAAWA,CAACA,WAAWA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA,CAACA;YACrDA,MAAMA,CAACA;QACXA,CAACA;QAEDA,IAAIA,kBAAkBA,GAAGA,IAAIA,CAACA,SAASA,CAACA,aAAaA,EAAEA,CAACA;QAExDA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,GAAGA,EAAEA;YACrBA,KAAKA,EAAEA,OAAOA;YACdA,cAAcA,EAAEA,IAAIA;SACvBA,CAACA,CAACA,IAAIA,CAACA,UAAAA,IAAIA;YACRA,EAAEA,CAACA,CAACA,IAAIA,YAAYA,iCAAoBA,CAACA,CAACA,CAACA;gBAChBA,IAAKA,CAACA,gBAAgBA,EAAEA,CAACA;gBAChDA,kBAAkBA,CAACA,QAAQA,EAAEA,CAACA;YAClCA,CAACA;QACLA,CAACA,CAACA,CAACA;IACPA,CAACA;IACLR,iBAACA;AAADA,CAACA,AAzJD,IAyJC;AAED,IAAI,UAAU,GAAQ,IAAI,UAAU,EAAE,CAAC;AACvC,iBAAS,UAAU,CAAC","sourcesContent":["import * as url from \"url\";\nimport {View} from \"atom-space-pen-views\";\n\nimport * as apd from \"atom-package-dependencies\";\n\nimport * as V from \"./util/const\";\nimport * as logger from \"./util/logger\";\nimport linter from \"./linter\";\nimport ReVIEWPreviewView from \"./view/review-preview-view\";\nimport ReVIEWOutlineView from \"./view/review-outline-view\";\nimport ReVIEWSyntaxListView from \"./view/review-syntax-list-view\";\n\nclass Controller {\n    config = {\n        debug: {\n            title: \"Debug: language-review. please do not use this option.\",\n            type: \"boolean\",\n            default: false\n        },\n        grammar: {\n            title: \"grammer scope. please do not change this option.\",\n            type: \"string\",\n            default: V.reviewScopeName\n        }\n    };\n\n    editorViewSubscription: { off(): any; };\n    outlineView: ReVIEWOutlineView;\n\n    provideLinter() {\n        return {\n            grammarScopes: [V.reviewScopeName],\n            scope: \"file\", // or \"project\"\n            lintOnFly: false,\n            lint: linter\n        };\n    }\n\n    activate(): void {\n        let linter = apd.require(\"linter\");\n        if (!linter) {\n            let notification = atom.notifications.addInfo(\"Re:VIEW: 足りない依存関係があるため、インストールを行っています。\");\n            apd.install(() => {\n                atom.notifications.addSuccess(\"Re:VIEW: 準備ができました！\");\n                notification.dismiss();\n\n                // Packages don't get loaded automatically as a result of an install\n                if (!apd.require(\"linter\")) {\n                    atom.packages.loadPackage(\"linter\");\n                }\n\n                atom.packages.activatePackage(\"linter\").then(() => this.readyToActivate());\n            });\n            return;\n        }\n\n        this.readyToActivate();\n    }\n\n    readyToActivate() {\n        atom.commands.add(\"atom-workspace\", V.protocol + \"toggle-preview\", () => {\n            this.togglePreview();\n        });\n        atom.commands.add(\"atom-workspace\", V.protocol + \"toggle-outline\", () => {\n            this.toggleOutline();\n        });\n        atom.commands.add(\"atom-workspace\", V.protocol + \"toggle-syntax-list\", () => {\n            this.toggleSyntaxList();\n        });\n\n        atom.workspace.addOpener((urlToOpen: string): View => {\n            logger.log(urlToOpen);\n            let tmpUrl = url.parse(urlToOpen);\n\n            let pathName = tmpUrl.pathname;\n            if (pathName) {\n                pathName = decodeURI(pathName);\n            }\n\n            let protocol = tmpUrl.protocol;\n            if (protocol !== V.protocol) {\n                return;\n            }\n            let host = tmpUrl.host;\n            if (host === V.previewHost) {\n                return new ReVIEWPreviewView({ editorId: pathName.substring(1) });\n            } else if (host === V.syntaxListHost) {\n                return new ReVIEWSyntaxListView({ editorId: pathName.substring(1) });\n            }\n        });\n    }\n\n    deactivate() {\n    }\n\n    togglePreview(): void {\n        let editor = atom.workspace.getActiveTextEditor();\n        if (!editor) {\n            return;\n        }\n\n        if (atom.config.get(\"language-review.grammar\") !== editor.getGrammar().scopeName) {\n            return;\n        }\n\n        let uri = `${V.protocol}//${V.previewHost}/${editor.id}`;\n\n        let previewPane = atom.workspace.paneForURI(uri);\n\n        if (previewPane) {\n            previewPane.destroyItem(previewPane.itemForURI(uri));\n            return;\n        }\n\n        let previousActivePane = atom.workspace.getActivePane();\n\n        atom.workspace.open(uri, {\n            split: \"right\",\n            searchAllPanes: true\n        }).then(view => {\n            if (view instanceof ReVIEWPreviewView) {\n                (<ReVIEWPreviewView>view).renderReVIEW();\n                previousActivePane.activate();\n            }\n        });\n    }\n\n    toggleOutline() {\n        if (!this.outlineView) {\n            this.outlineView = new ReVIEWOutlineView();\n        }\n        this.outlineView.toggle();\n    }\n\n    toggleSyntaxList() {\n        let editor = atom.workspace.getActiveTextEditor();\n        if (!editor) {\n            return;\n        }\n\n        if (atom.config.get(\"language-review.grammar\") !== editor.getGrammar().scopeName) {\n            return;\n        }\n\n        let uri = `${V.protocol}//${V.syntaxListHost}/${editor.id}`;\n\n        let previewPane = atom.workspace.paneForURI(uri);\n\n        if (previewPane) {\n            previewPane.destroyItem(previewPane.itemForURI(uri));\n            return;\n        }\n\n        let previousActivePane = atom.workspace.getActivePane();\n\n        atom.workspace.open(uri, {\n            split: \"right\",\n            searchAllPanes: true\n        }).done(view => {\n            if (view instanceof ReVIEWSyntaxListView) {\n                (<ReVIEWSyntaxListView>view).renderSyntaxList();\n                previousActivePane.activate();\n            }\n        });\n    }\n}\n\nlet controller: any = new Controller();\nexport = controller;\n"]}
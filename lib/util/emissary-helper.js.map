{"version":3,"file":"emissary-helper.js","sourceRoot":"","sources":["emissary-helper.ts"],"names":["EmitterSubscriberBase","EmitterSubscriberBase.constructor","EmitterSubscriberBase.emissarified","EmitterSubscriberBase.on","EmitterSubscriberBase.once","EmitterSubscriberBase.signal","EmitterSubscriberBase.behavior","EmitterSubscriberBase.emit","EmitterSubscriberBase.off","EmitterSubscriberBase.pauseEvents","EmitterSubscriberBase.resumeEvents","EmitterSubscriberBase.incrementSubscriptionCount","EmitterSubscriberBase.decrementSubscriptionCount","EmitterSubscriberBase.getSubscriptionCount","EmitterSubscriberBase.hasSubscriptions","EmitterSubscriberBase.subscribeWith","EmitterSubscriberBase.addSubscription","EmitterSubscriberBase.subscribe","EmitterSubscriberBase.subscribeToCommand","EmitterSubscriberBase.unsubscribe"],"mappings":"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","sourcesContent":["// このファイルについて\n// emissary.Emitter.includeInto などでprototypeにメソッドを生やせる\n// しかし、TypeScriptで同じことをやっても型的に解決できない。mixinほしい。\n// そのため、インタフェースを継承し、実装を与えるが実装を削除するようにする。\n// この処理を必要な箇所全てでやるとアホみたいに可読性落ちるのでこのクラスに集約する。\n\nimport emissary = require(\"emissary\");\n\nexport class EmitterSubscriberBase implements Emissary.IEmitter, Emissary.ISubscriber {\n\n    static emissarified() {\n        delete this.prototype.on;\n        delete this.prototype.once;\n        delete this.prototype.signal;\n        delete this.prototype.behavior;\n        delete this.prototype.emit;\n        delete this.prototype.off;\n        delete this.prototype.pauseEvents;\n        delete this.prototype.resumeEvents;\n        delete this.prototype.incrementSubscriptionCount;\n        delete this.prototype.decrementSubscriptionCount;\n        delete this.prototype.getSubscriptionCount;\n        delete this.prototype.hasSubscriptions;\n        delete this.prototype.subscribeWith;\n        delete this.prototype.addSubscription;\n        delete this.prototype.subscribe;\n        delete this.prototype.subscribeToCommand;\n        delete this.prototype.unsubscribe;\n        emissary.Emitter.includeInto(this);\n        emissary.Subscriber.includeInto(this);\n    }\n\n    // overwrite by emissary.Emitter.includeInto(ReVIEWRunner);\n    on(eventNames: string, handler: Function): any /* return value type are Signal */ {\n        throw new Error();\n    }\n\n    once(eventName: string, handler: Function): any /* return value type are Signal */ {\n        throw new Error();\n    }\n\n    signal(eventName: string): void {\n        throw new Error();\n    }\n\n    behavior(eventName: string, initialValue: any): void {\n        throw new Error();\n    }\n\n    emit(eventName: string, ...args: any[]): void {\n        throw new Error();\n    }\n\n    off(eventNames: string, handler: Function): void {\n        throw new Error();\n    }\n\n    pauseEvents(eventNames: string): void {\n        throw new Error();\n    }\n\n    resumeEvents(eventNames: string): void {\n        throw new Error();\n    }\n\n    incrementSubscriptionCount(eventName: string): number {\n        throw new Error();\n    }\n\n    decrementSubscriptionCount(eventName: string): number {\n        throw new Error();\n    }\n\n    getSubscriptionCount(eventName: string): number {\n        throw new Error();\n    }\n\n    hasSubscriptions(eventName: string): boolean {\n        throw new Error();\n    }\n\n    // overwrite by emissary.Subscriber.includeInto(ReVIEWRunner);\n    subscribeWith(eventEmitter: any, methodName: string, args: any): Emissary.ISubscription {\n        throw new Error();\n    }\n\n    addSubscription(subscription: any): Emissary.ISubscription {\n        throw new Error();\n    }\n\n    subscribe(eventEmitterOrSubscription: any, ...args: any[]): Emissary.ISubscription {\n        throw new Error();\n    }\n\n    subscribeToCommand(eventEmitter: any, ...args: any[]): Emissary.ISubscription {\n        throw new Error();\n    }\n\n    unsubscribe(object?: any): any {\n        throw new Error();\n    }\n}\n\nEmitterSubscriberBase.emissarified();\n"]}
{"version":3,"file":"logger.js","sourceRoot":"","sources":["logger.ts"],"names":["isEnableOutput","getCallSites","getCallSites.MyError","logHelper","log","warn","error"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/* tslint:disable:ban */\n\nfunction isEnableOutput(): boolean {\n    \"use strict\";\n\n    return !!atom.config.get(\"language-review.debug\");\n}\n\ninterface CallSite {\n    getThis(): any;\n    getTypeName(): string;\n    getFunction(): Function;\n    getFunctionName(): string;\n    getMethodName(): string;\n    getFileName(): string;\n    getLineNumber(): number;\n    getColumnNumber(): number;\n    getEvalOrigin(): any;\n    isToplevel(): boolean;\n    isEval(): boolean;\n    isNative(): boolean;\n    isConstructor(): boolean;\n}\n\nfunction getCallSites(strip = 2): CallSite[] {\n    \"use strict\";\n\n    function MyError() {\n        (<any>Error).captureStackTrace(this, MyError);\n    }\n\n    let oldPrepareStackTrace = (<any>Error).prepareStackTrace;\n\n    let callSites: any[];\n\n    (<any>Error).prepareStackTrace = function(error: any, stack: any) {\n        callSites = stack;\n        return stack;\n    };\n    let obj: any = new (<any>MyError)();\n\n    obj.stack;\n\n    (<any>Error).prepareStackTrace = oldPrepareStackTrace;\n\n    for (let i = 0; i < strip; i++) {\n        callSites.shift();\n    }\n\n    return callSites;\n}\n\nfunction logHelper(callback: () => void): void {\n    \"use strict\";\n\n    let callSite = getCallSites(3)[0];\n    let label: string;\n    let functionName = callSite.getFunctionName();\n    if (functionName) {\n        label = functionName;\n    } else {\n        let fileName = callSite.getFileName();\n        label = `${fileName.substr(fileName.lastIndexOf(\"/\") + 1) }:${callSite.getLineNumber() }:${callSite.getColumnNumber() }`;\n    }\n\n    console.group(label);\n    console.log([callSite.getFileName(), callSite.getLineNumber(), callSite.getColumnNumber()]);\n    callback();\n    console.groupEnd();\n}\n\n/* tslint:disable:no-unused-variable */\n\nexport function log(...args: any[]): void {\n    \"use strict\";\n\n    if (isEnableOutput()) {\n        logHelper(() => {\n            console.log.apply(console, args);\n        });\n    }\n}\n\nexport function warn(...args: any[]): void {\n    \"use strict\";\n\n    if (isEnableOutput()) {\n        logHelper(() => {\n            console.warn.apply(console, args);\n        });\n    }\n}\n\nexport function error(...args: any[]): void {\n    \"use strict\";\n\n    if (isEnableOutput()) {\n        logHelper(() => {\n            console.error.apply(console, args);\n        });\n    }\n}\n\n/* tslint:enable:ban no-unused-variable */\n"]}